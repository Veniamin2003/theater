<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        L3849avT+uluAAAAAElFTkSuQmCC
</value>
  </data>
</root>