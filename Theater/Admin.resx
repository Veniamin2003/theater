<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>